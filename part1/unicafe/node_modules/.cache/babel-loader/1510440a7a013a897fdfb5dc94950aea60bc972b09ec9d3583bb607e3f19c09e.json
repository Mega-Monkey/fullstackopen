{"ast":null,"code":"var _jsxFileName = \"/Users/samcorominas/Code/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Adverage \", good + -bad / 2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Percetage \", good / bad ? good / bad * 100 : 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const addGood = () => {\n    setGood(good + 1);\n  };\n  const addNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n  const addBad = () => {\n    setBad(bad + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGood,\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNeutral,\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBad,\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), good + neutral + bad > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 92\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","addGood","addNeutral","addBad"],"sources":["/Users/samcorominas/Code/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = ({good, neutral, bad}) => {\n  return (\n    <>\n      <p>All {good + neutral + bad}</p>\n      <p>Adverage {good + (-bad)/2}</p>\n      <p>Percetage {good / bad ? (good / bad) * 100 : 0}</p>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const addGood = () => {\n    setGood(good + 1)\n  }\n\n  const addNeutral = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const addBad = () => {\n    setBad(bad + 1)\n  }\n\n\n  return (\n    <div>\n      <button onClick={addGood}>Good</button>\n      <button onClick={addNeutral}>Neutral</button>\n      <button onClick={addBad}>Bad</button>\n      <p>Good {good}</p>\n      <p>Neutral {neutral}</p>\n      <p>Bad {bad}</p>\n      {good + neutral + bad > 0 ? <Statistics good={good} neutral={neutral} bad={bad} /> : <p>No Feedback given</p>}\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,UAAU,GAAG,QAA0B;EAAA,IAAzB;IAACC,IAAI;IAAEC,OAAO;IAAEC;EAAG,CAAC;EACtC,oBACE;IAAA,wBACE;MAAA,mBAAQF,IAAI,GAAGC,OAAO,GAAGC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC;MAAA,wBAAaF,IAAI,GAAI,CAACE,GAAG,GAAE,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC;MAAA,yBAAcF,IAAI,GAAGE,GAAG,GAAIF,IAAI,GAAGE,GAAG,GAAI,GAAG,GAAG,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,gBACrD;AAEP,CAAC;AAAA,KARKH,UAAU;AAUhB,MAAMI,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACG,OAAO,EAAEI,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACI,GAAG,EAAEI,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMS,OAAO,GAAG,MAAM;IACpBH,OAAO,CAACJ,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EAED,MAAMQ,UAAU,GAAG,MAAM;IACvBH,UAAU,CAACJ,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMQ,MAAM,GAAG,MAAM;IACnBH,MAAM,CAACJ,GAAG,GAAG,CAAC,CAAC;EACjB,CAAC;EAGD,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEK,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACvC;MAAQ,OAAO,EAAEC,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eAC7C;MAAQ,OAAO,EAAEC,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACrC;MAAA,oBAAST,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA,uBAAYC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,mBAAQC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,EACfF,IAAI,GAAGC,OAAO,GAAGC,GAAG,GAAG,CAAC,gBAAG,QAAC,UAAU;MAAC,IAAI,EAAEF,IAAK;MAAC,OAAO,EAAEC,OAAQ;MAAC,GAAG,EAAEC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;EAAA;IAAA;IAAA;IAAA;EAAA,QACzG;AAEV,CAAC;AAAA,GA9BKC,GAAG;AAAA,MAAHA,GAAG;AAgCT,eAAeA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}